#This code takes raw HiSeq data and produces an OTU table, OTUs, and taxonomic classifications


# Commands for preparing sequencing data.

#Where the raw data fastq will be stored
raw_data_folder=/ebio/abt6_projects7/bacterial_strain_analysis/data/raw_seqDATA/HiSeq3000-Run0168   

#Where the demultiplexed data are stored at the institute
short_read_archive=/ebio/abt6_sra/years/2020/02_26/ampliconsequencing  

#Where the processed data will be stored
processed_data_folder=/ebio/abt6_projects7/bacterial_strain_analysis/data/processed_DATA/HiSeq3000-Run0168

#The basename that will be used for all output files.
combined_fasta_basename="HiSeq0168_all_trimmed"


#>
	#>
		#>
1			#> #Make a new folder named after the HiSeq run 
		#>
	#>
#>
mkdir $raw_data_folder


#>
	#>
		#>
2			#>  Find all the fastq.gz file paths in the raw data and create a link to it.
		#>
	#>
#>
cd $raw_data_folder
for i in $( find "$short_read_archive"/illumina_ST-J00101_flowcellA_SampleId*  | grep 'fastq\.gz' )
do 
echo $i
ln -s $i
done


#>
	#>
		#>
			#>  #copy actual R1 files to processed data and uncompress
		#>
	#>
#>
mkdir -p $processed_data_folder
for i in $( ls *_L00*_R1_* )
do 
    echo $i
    i2=$(sed "s/.gz//g" <(echo $i))
    zcat $i > "$processed_data_folder"/$i2
done



#>
	#>
		#>
			#>  #Trim off primers. Uses USEARCH. Move trimmed fastq to one folder, untrimmed to another
		#>
	#>
#>
for i in *fastq
do
    echo $i
    qsub -N "$i" -o $(pwd)/out.txt -e $(pwd)/err.txt -V -cwd /ebio/abt6_projects7/bacterial_strain_analysis/code/HiSeqTrim_LOAD.sh $i
done

mkdir trimmedFASTQ
mv *_515F_GI502F.fastq trimmedFASTQ

mkdir FASTQ
mv *.fastq FASTQ


#>
	#>
		#>
			#>  Requires USEARCH. Quality filter the trimmed data and move resulting FASTA files to a new folder
		#>
	#>
#>
cd trimmedFASTQ
for i in *fastq
do
qsub -N "$i" -o $(pwd)/out.txt -e $(pwd)/err.txt -V -cwd /ebio/abt6_projects7/bacterial_strain_analysis/code/AmpliconSeqQualityFilter.sh $i 
done
rm *trash


mkdir "$processed"/FASTA_trimmed
mv *filtered.fa "$processed"/FASTA_trimmed



#>
	#>
		#>
			#>  Fix sample names so important information all occurs before the first "_"
		#>
	#>
#>

#put sample, lane, and read1 all in the same block of text
rename "s/_S/S/" *
rename "s/_L/L/" *
rename "s/_R/R/" *
# "D7S52L001R1"



#>
	#>
		#>
			#>  Rename each sequence in the fasta file after the name of the fasta file, so we know
			   from which sample each sequence comes.
		#>
	#>
#>
#rename each sequence so it reflects the name of the fasta file
for i in *fastq_filtered.fa
do
    #echo $i
    i2=$(sed "s/_001.fastq_filtered.fa//g" <(echo $i))
    echo $i2
    sed -i "s/^>[A-Z][0-9]*\./>"$i2"./" $i 
done


#>
	#>
		#>
			#>  #combine all the FASTA files into one big file
		#>
	#>
#>
rm "$combined_fasta_name"
for i in $(ls *filtered.fa)
do 
echo $i
cat $i >> "$combined_fasta_basename".fasta
done

mkdir -p $processed/OTUs_trimmed
mv "$combined_fasta_basename".fasta $processed/OTUs_trimmed

cd "$processed"/OTUs_trimmed

# Find unique read sequences and abundances
vsearch=/ebio/abt6_projects7/bacterial_strain_analysis/code/vsearch-2.4.3/vsearch-2.4.3-linux-x86_64/bin/vsearch
nice -12 $vsearch --derep_fulllength "$combined_fasta_basename".fasta --sizeout --output "$combined_fasta_basename"_uniques.fa


#cluster OTUS and filter chimeras
usearch=/ebio/abt6_projects7/bacterial_strain_analysis/code/usearch10
nice -12 $usearch -unoise3 "$combined_fasta_basename"_uniques.fa -zotus "$combined_fasta_basename"_zotus.fa -tabbedout "$combined_fasta_basename"_unoise3.txt

sed -i -e 's/Zotu/Otu/g' "$combined_fasta_basename"_zotus.fa

/ebio/abt6_projects7/bacterial_strain_analysis/code/TACO_make_otus.sh

#fullfasta="$combined_fasta_basename".fasta
#otus="$combined_fasta_basename"_zotus.fa
#tablename=/ebio/abt6_projects7/bacterial_strain_analysis/data/raw_seqDATA/HiSeq3000-Run0168/OTUs/Load_HiSeq_20200226.txt
#tablename=Load_HiSeq_20200226.txt
#qsub -N "p341" -o $(pwd)/out.txt -e $(pwd)/err.txt -V -cwd /ebio/abt6_projects7/bacterial_strain_analysis/code/makeOTUtable515.sh $fullfasta $otus $tablename


#assign taxonomy by USEARCH, using RDP ref database.
refdb=/ebio/abt6_projects7/bacterial_strain_analysis/data/16S_db/RDP/rdp_16s_v16.udb 
usearch=/ebio/abt6_projects7/bacterial_strain_analysis/code/usearch10
nice -12 $usearch -sintax "$combined_fasta_basename"_zotus.fa -db $refdb -strand both -tabbedout "$combined_fasta_basename".tax -sintax_cutoff 0.8


#transfer files to PC for processing/analysis
scp dlundberg@burrito.eb.local:/ebio/abt6_projects7/bacterial_strain_analysis/data/processed_DATA/HiSeq3000-Run0168/OTUs_trimmed/Load_HiSeq_20200228.txt /Users/dlundberg/Documents/abt6/Pratchaya/PCR_Load_Quantification/HiSeq168 
scp dlundberg@burrito.eb.local:/ebio/abt6_projects7/bacterial_strain_analysis/data/processed_DATA/HiSeq3000-Run0168/OTUs_trimmed/HiSeq0168_all_trimmed.tax  /Users/dlundberg/Documents/abt6/Pratchaya/PCR_Load_Quantification/HiSeq168 
scp dlundberg@burrito.eb.local:/ebio/abt6_projects7/bacterial_strain_analysis/data/processed_DATA/HiSeq3000-Run0168/OTUs_trimmed/HiSeq0168_all_trimmed_zotus.fa  /Users/dlundberg/Documents/abt6/Pratchaya/PCR_Load_Quantification/HiSeq168 






